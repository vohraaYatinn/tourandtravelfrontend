"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-onclickoutside";
exports.ids = ["vendor-chunks/react-onclickoutside"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-onclickoutside/dist/react-onclickoutside.es.js":
/*!***************************************************************************!*\
  !*** ./node_modules/react-onclickoutside/dist/react-onclickoutside.es.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IGNORE_CLASS_NAME: () => (/* binding */ IGNORE_CLASS_NAME),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n} /**\n * Check whether some DOM node is our Component's node.\n */ \nfunction isNodeFound(current, componentNode, ignoreClass) {\n    if (current === componentNode) {\n        return true;\n    } // SVG <use/> elements do not technically reside in the rendered DOM, so\n    // they do not have classList directly, but they offer a link to their\n    // corresponding element, which can have classList. This extra check is for\n    // that case.\n    // See: http://www.w3.org/TR/SVG11/struct.html#InterfaceSVGUseElement\n    // Discussion: https://github.com/Pomax/react-onclickoutside/pull/17\n    if (current.correspondingElement) {\n        return current.correspondingElement.classList.contains(ignoreClass);\n    }\n    return current.classList.contains(ignoreClass);\n}\n/**\n * Try to find our node in a hierarchy of nodes, returning the document\n * node as highest node if our node is not found in the path up.\n */ function findHighest(current, componentNode, ignoreClass) {\n    if (current === componentNode) {\n        return true;\n    } // If source=local then this event came from 'somewhere'\n    // inside and should be ignored. We could handle this with\n    // a layered approach, too, but that requires going back to\n    // thinking in terms of Dom node nesting, running counter\n    // to React's 'you shouldn't care about the DOM' philosophy.\n    // Also cover shadowRoot node by checking current.host\n    while(current.parentNode || current.host){\n        // Only check normal node without shadowRoot\n        if (current.parentNode && isNodeFound(current, componentNode, ignoreClass)) {\n            return true;\n        }\n        current = current.parentNode || current.host;\n    }\n    return current;\n}\n/**\n * Check if the browser scrollbar was clicked\n */ function clickedScrollbar(evt) {\n    return document.documentElement.clientWidth <= evt.clientX || document.documentElement.clientHeight <= evt.clientY;\n} // ideally will get replaced with external dep\n// when rafrex/detect-passive-events#4 and rafrex/detect-passive-events#5 get merged in\nvar testPassiveEventSupport = function testPassiveEventSupport() {\n    if (true) {\n        return;\n    }\n    var passive = false;\n    var options = Object.defineProperty({}, \"passive\", {\n        get: function get() {\n            passive = true;\n        }\n    });\n    var noop = function noop() {};\n    window.addEventListener(\"testPassiveEventSupport\", noop, options);\n    window.removeEventListener(\"testPassiveEventSupport\", noop, options);\n    return passive;\n};\nfunction autoInc(seed) {\n    if (seed === void 0) {\n        seed = 0;\n    }\n    return function() {\n        return ++seed;\n    };\n}\nvar uid = autoInc();\nvar passiveEventSupport;\nvar handlersMap = {};\nvar enabledInstances = {};\nvar touchEvents = [\n    \"touchstart\",\n    \"touchmove\"\n];\nvar IGNORE_CLASS_NAME = \"ignore-react-onclickoutside\";\n/**\n * Options for addEventHandler and removeEventHandler\n */ function getEventHandlerOptions(instance, eventName) {\n    var handlerOptions = {};\n    var isTouchEvent = touchEvents.indexOf(eventName) !== -1;\n    if (isTouchEvent && passiveEventSupport) {\n        handlerOptions.passive = !instance.props.preventDefault;\n    }\n    return handlerOptions;\n}\n/**\n * This function generates the HOC function that you'll use\n * in order to impart onOutsideClick listening to an\n * arbitrary component. It gets called at the end of the\n * bootstrapping code to yield an instance of the\n * onClickOutsideHOC function defined inside setupHOC().\n */ function onClickOutsideHOC(WrappedComponent, config) {\n    var _class, _temp;\n    var componentName = WrappedComponent.displayName || WrappedComponent.name || \"Component\";\n    return _temp = _class = /*#__PURE__*/ function(_Component) {\n        _inheritsLoose(onClickOutside, _Component);\n        function onClickOutside(props) {\n            var _this;\n            _this = _Component.call(this, props) || this;\n            _this.__outsideClickHandler = function(event) {\n                if (typeof _this.__clickOutsideHandlerProp === \"function\") {\n                    _this.__clickOutsideHandlerProp(event);\n                    return;\n                }\n                var instance = _this.getInstance();\n                if (typeof instance.props.handleClickOutside === \"function\") {\n                    instance.props.handleClickOutside(event);\n                    return;\n                }\n                if (typeof instance.handleClickOutside === \"function\") {\n                    instance.handleClickOutside(event);\n                    return;\n                }\n                throw new Error(\"WrappedComponent: \" + componentName + \" lacks a handleClickOutside(event) function for processing outside click events.\");\n            };\n            _this.__getComponentNode = function() {\n                var instance = _this.getInstance();\n                if (config && typeof config.setClickOutsideRef === \"function\") {\n                    return config.setClickOutsideRef()(instance);\n                }\n                if (typeof instance.setClickOutsideRef === \"function\") {\n                    return instance.setClickOutsideRef();\n                }\n                return (0,react_dom__WEBPACK_IMPORTED_MODULE_1__.findDOMNode)(instance);\n            };\n            _this.enableOnClickOutside = function() {\n                if (typeof document === \"undefined\" || enabledInstances[_this._uid]) {\n                    return;\n                }\n                if (typeof passiveEventSupport === \"undefined\") {\n                    passiveEventSupport = testPassiveEventSupport();\n                }\n                enabledInstances[_this._uid] = true;\n                var events = _this.props.eventTypes;\n                if (!events.forEach) {\n                    events = [\n                        events\n                    ];\n                }\n                handlersMap[_this._uid] = function(event) {\n                    if (_this.componentNode === null) return;\n                    if (_this.props.preventDefault) {\n                        event.preventDefault();\n                    }\n                    if (_this.props.stopPropagation) {\n                        event.stopPropagation();\n                    }\n                    if (_this.props.excludeScrollbar && clickedScrollbar(event)) return;\n                    var current = event.composed && event.composedPath && event.composedPath().shift() || event.target;\n                    if (findHighest(current, _this.componentNode, _this.props.outsideClickIgnoreClass) !== document) {\n                        return;\n                    }\n                    _this.__outsideClickHandler(event);\n                };\n                events.forEach(function(eventName) {\n                    document.addEventListener(eventName, handlersMap[_this._uid], getEventHandlerOptions(_assertThisInitialized(_this), eventName));\n                });\n            };\n            _this.disableOnClickOutside = function() {\n                delete enabledInstances[_this._uid];\n                var fn = handlersMap[_this._uid];\n                if (fn && typeof document !== \"undefined\") {\n                    var events = _this.props.eventTypes;\n                    if (!events.forEach) {\n                        events = [\n                            events\n                        ];\n                    }\n                    events.forEach(function(eventName) {\n                        return document.removeEventListener(eventName, fn, getEventHandlerOptions(_assertThisInitialized(_this), eventName));\n                    });\n                    delete handlersMap[_this._uid];\n                }\n            };\n            _this.getRef = function(ref) {\n                return _this.instanceRef = ref;\n            };\n            _this._uid = uid();\n            return _this;\n        }\n        /**\n     * Access the WrappedComponent's instance.\n     */ var _proto = onClickOutside.prototype;\n        _proto.getInstance = function getInstance() {\n            if (WrappedComponent.prototype && !WrappedComponent.prototype.isReactComponent) {\n                return this;\n            }\n            var ref = this.instanceRef;\n            return ref.getInstance ? ref.getInstance() : ref;\n        };\n        /**\n     * Add click listeners to the current document,\n     * linked to this component's state.\n     */ _proto.componentDidMount = function componentDidMount() {\n            // If we are in an environment without a DOM such\n            // as shallow rendering or snapshots then we exit\n            // early to prevent any unhandled errors being thrown.\n            if (typeof document === \"undefined\" || !document.createElement) {\n                return;\n            }\n            var instance = this.getInstance();\n            if (config && typeof config.handleClickOutside === \"function\") {\n                this.__clickOutsideHandlerProp = config.handleClickOutside(instance);\n                if (typeof this.__clickOutsideHandlerProp !== \"function\") {\n                    throw new Error(\"WrappedComponent: \" + componentName + \" lacks a function for processing outside click events specified by the handleClickOutside config option.\");\n                }\n            }\n            this.componentNode = this.__getComponentNode(); // return early so we dont initiate onClickOutside\n            if (this.props.disableOnClickOutside) return;\n            this.enableOnClickOutside();\n        };\n        _proto.componentDidUpdate = function componentDidUpdate() {\n            this.componentNode = this.__getComponentNode();\n        } /**\n     * Remove all document's event listeners for this component\n     */ ;\n        _proto.componentWillUnmount = function componentWillUnmount() {\n            this.disableOnClickOutside();\n        } /**\n     * Can be called to explicitly enable event listening\n     * for clicks and touches outside of this element.\n     */ ;\n        /**\n     * Pass-through render\n     */ _proto.render = function render() {\n            // eslint-disable-next-line no-unused-vars\n            var _this$props = this.props;\n            _this$props.excludeScrollbar;\n            var props = _objectWithoutPropertiesLoose(_this$props, [\n                \"excludeScrollbar\"\n            ]);\n            if (WrappedComponent.prototype && WrappedComponent.prototype.isReactComponent) {\n                props.ref = this.getRef;\n            } else {\n                props.wrappedRef = this.getRef;\n            }\n            props.disableOnClickOutside = this.disableOnClickOutside;\n            props.enableOnClickOutside = this.enableOnClickOutside;\n            return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(WrappedComponent, props);\n        };\n        return onClickOutside;\n    }(react__WEBPACK_IMPORTED_MODULE_0__.Component), _class.displayName = \"OnClickOutside(\" + componentName + \")\", _class.defaultProps = {\n        eventTypes: [\n            \"mousedown\",\n            \"touchstart\"\n        ],\n        excludeScrollbar: config && config.excludeScrollbar || false,\n        outsideClickIgnoreClass: IGNORE_CLASS_NAME,\n        preventDefault: false,\n        stopPropagation: false\n    }, _class.getClass = function() {\n        return WrappedComponent.getClass ? WrappedComponent.getClass() : WrappedComponent;\n    }, _temp;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (onClickOutsideHOC);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3Qtb25jbGlja291dHNpZGUvZGlzdC9yZWFjdC1vbmNsaWNrb3V0c2lkZS5lcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBNEM7QUFBb0M7QUFBQSxTQUFTRyxlQUFlQyxRQUFRLEVBQUVDLFVBQVU7SUFDMUhELFNBQVNFLFNBQVMsR0FBR0MsT0FBT0MsTUFBTSxDQUFDSCxXQUFXQyxTQUFTO0lBQ3ZERixTQUFTRSxTQUFTLENBQUNHLFdBQVcsR0FBR0w7SUFFakNNLGdCQUFnQk4sVUFBVUM7QUFDNUI7QUFFQSxTQUFTSyxnQkFBZ0JDLENBQUMsRUFBRUMsQ0FBQztJQUMzQkYsa0JBQWtCSCxPQUFPTSxjQUFjLElBQUksU0FBU0gsZ0JBQWdCQyxDQUFDLEVBQUVDLENBQUM7UUFDdEVELEVBQUVHLFNBQVMsR0FBR0Y7UUFDZCxPQUFPRDtJQUNUO0lBRUEsT0FBT0QsZ0JBQWdCQyxHQUFHQztBQUM1QjtBQUVBLFNBQVNHLDhCQUE4QkMsTUFBTSxFQUFFQyxRQUFRO0lBQ3JELElBQUlELFVBQVUsTUFBTSxPQUFPLENBQUM7SUFDNUIsSUFBSUUsU0FBUyxDQUFDO0lBQ2QsSUFBSUMsYUFBYVosT0FBT2EsSUFBSSxDQUFDSjtJQUM3QixJQUFJSyxLQUFLQztJQUVULElBQUtBLElBQUksR0FBR0EsSUFBSUgsV0FBV0ksTUFBTSxFQUFFRCxJQUFLO1FBQ3RDRCxNQUFNRixVQUFVLENBQUNHLEVBQUU7UUFDbkIsSUFBSUwsU0FBU08sT0FBTyxDQUFDSCxRQUFRLEdBQUc7UUFDaENILE1BQU0sQ0FBQ0csSUFBSSxHQUFHTCxNQUFNLENBQUNLLElBQUk7SUFDM0I7SUFFQSxPQUFPSDtBQUNUO0FBRUEsU0FBU08sdUJBQXVCQyxJQUFJO0lBQ2xDLElBQUlBLFNBQVMsS0FBSyxHQUFHO1FBQ25CLE1BQU0sSUFBSUMsZUFBZTtJQUMzQjtJQUVBLE9BQU9EO0FBQ1QsRUFBQzs7Q0FFQTtBQUNELFNBQVNFLFlBQVlDLE9BQU8sRUFBRUMsYUFBYSxFQUFFQyxXQUFXO0lBQ3RELElBQUlGLFlBQVlDLGVBQWU7UUFDN0IsT0FBTztJQUNULEVBQUUsd0VBQXdFO0lBQzFFLHNFQUFzRTtJQUN0RSwyRUFBMkU7SUFDM0UsYUFBYTtJQUNiLHFFQUFxRTtJQUNyRSxvRUFBb0U7SUFHcEUsSUFBSUQsUUFBUUcsb0JBQW9CLEVBQUU7UUFDaEMsT0FBT0gsUUFBUUcsb0JBQW9CLENBQUNDLFNBQVMsQ0FBQ0MsUUFBUSxDQUFDSDtJQUN6RDtJQUVBLE9BQU9GLFFBQVFJLFNBQVMsQ0FBQ0MsUUFBUSxDQUFDSDtBQUNwQztBQUNBOzs7Q0FHQyxHQUVELFNBQVNJLFlBQVlOLE9BQU8sRUFBRUMsYUFBYSxFQUFFQyxXQUFXO0lBQ3RELElBQUlGLFlBQVlDLGVBQWU7UUFDN0IsT0FBTztJQUNULEVBQUUsd0RBQXdEO0lBQzFELDBEQUEwRDtJQUMxRCwyREFBMkQ7SUFDM0QseURBQXlEO0lBQ3pELDREQUE0RDtJQUM1RCxzREFBc0Q7SUFHdEQsTUFBT0QsUUFBUU8sVUFBVSxJQUFJUCxRQUFRUSxJQUFJLENBQUU7UUFDekMsNENBQTRDO1FBQzVDLElBQUlSLFFBQVFPLFVBQVUsSUFBSVIsWUFBWUMsU0FBU0MsZUFBZUMsY0FBYztZQUMxRSxPQUFPO1FBQ1Q7UUFFQUYsVUFBVUEsUUFBUU8sVUFBVSxJQUFJUCxRQUFRUSxJQUFJO0lBQzlDO0lBRUEsT0FBT1I7QUFDVDtBQUNBOztDQUVDLEdBRUQsU0FBU1MsaUJBQWlCQyxHQUFHO0lBQzNCLE9BQU9DLFNBQVNDLGVBQWUsQ0FBQ0MsV0FBVyxJQUFJSCxJQUFJSSxPQUFPLElBQUlILFNBQVNDLGVBQWUsQ0FBQ0csWUFBWSxJQUFJTCxJQUFJTSxPQUFPO0FBQ3BILEVBQUMsOENBQThDO0FBQy9DLHVGQUF1RjtBQUN2RixJQUFJQywwQkFBMEIsU0FBU0E7SUFDckMsSUFBSSxJQUFvRSxFQUFZO1FBQ2xGO0lBQ0Y7SUFFQSxJQUFJRyxVQUFVO0lBQ2QsSUFBSUMsVUFBVTNDLE9BQU80QyxjQUFjLENBQUMsQ0FBQyxHQUFHLFdBQVc7UUFDakRDLEtBQUssU0FBU0E7WUFDWkgsVUFBVTtRQUNaO0lBQ0Y7SUFFQSxJQUFJSSxPQUFPLFNBQVNBLFFBQVE7SUFFNUJOLE9BQU9DLGdCQUFnQixDQUFDLDJCQUEyQkssTUFBTUg7SUFDekRILE9BQU9PLG1CQUFtQixDQUFDLDJCQUEyQkQsTUFBTUg7SUFDNUQsT0FBT0Q7QUFDVDtBQUFFLFNBQVNNLFFBQVFDLElBQUk7SUFDckIsSUFBSUEsU0FBUyxLQUFLLEdBQUc7UUFDbkJBLE9BQU87SUFDVDtJQUVBLE9BQU87UUFDTCxPQUFPLEVBQUVBO0lBQ1g7QUFDRjtBQUVBLElBQUlDLE1BQU1GO0FBQVUsSUFBSUc7QUFDeEIsSUFBSUMsY0FBYyxDQUFDO0FBQ25CLElBQUlDLG1CQUFtQixDQUFDO0FBQ3hCLElBQUlDLGNBQWM7SUFBQztJQUFjO0NBQVk7QUFDN0MsSUFBSUMsb0JBQW9CO0FBQ3hCOztDQUVDLEdBRUQsU0FBU0MsdUJBQXVCQyxRQUFRLEVBQUVDLFNBQVM7SUFDakQsSUFBSUMsaUJBQWlCLENBQUM7SUFDdEIsSUFBSUMsZUFBZU4sWUFBWXJDLE9BQU8sQ0FBQ3lDLGVBQWUsQ0FBQztJQUV2RCxJQUFJRSxnQkFBZ0JULHFCQUFxQjtRQUN2Q1EsZUFBZWpCLE9BQU8sR0FBRyxDQUFDZSxTQUFTSSxLQUFLLENBQUNDLGNBQWM7SUFDekQ7SUFFQSxPQUFPSDtBQUNUO0FBQ0E7Ozs7OztDQU1DLEdBR0QsU0FBU0ksa0JBQWtCQyxnQkFBZ0IsRUFBRUMsTUFBTTtJQUNqRCxJQUFJQyxRQUFRQztJQUVaLElBQUlDLGdCQUFnQkosaUJBQWlCSyxXQUFXLElBQUlMLGlCQUFpQk0sSUFBSSxJQUFJO0lBQzdFLE9BQU9ILFFBQVFELFNBQVMsV0FBVyxHQUFFLFNBQVVLLFVBQVU7UUFDdkQzRSxlQUFlNEUsZ0JBQWdCRDtRQUUvQixTQUFTQyxlQUFlWCxLQUFLO1lBQzNCLElBQUlZO1lBRUpBLFFBQVFGLFdBQVdHLElBQUksQ0FBQyxJQUFJLEVBQUViLFVBQVUsSUFBSTtZQUU1Q1ksTUFBTUUscUJBQXFCLEdBQUcsU0FBVUMsS0FBSztnQkFDM0MsSUFBSSxPQUFPSCxNQUFNSSx5QkFBeUIsS0FBSyxZQUFZO29CQUN6REosTUFBTUkseUJBQXlCLENBQUNEO29CQUVoQztnQkFDRjtnQkFFQSxJQUFJbkIsV0FBV2dCLE1BQU1LLFdBQVc7Z0JBRWhDLElBQUksT0FBT3JCLFNBQVNJLEtBQUssQ0FBQ2tCLGtCQUFrQixLQUFLLFlBQVk7b0JBQzNEdEIsU0FBU0ksS0FBSyxDQUFDa0Isa0JBQWtCLENBQUNIO29CQUNsQztnQkFDRjtnQkFFQSxJQUFJLE9BQU9uQixTQUFTc0Isa0JBQWtCLEtBQUssWUFBWTtvQkFDckR0QixTQUFTc0Isa0JBQWtCLENBQUNIO29CQUM1QjtnQkFDRjtnQkFFQSxNQUFNLElBQUlJLE1BQU0sdUJBQXVCWixnQkFBZ0I7WUFDekQ7WUFFQUssTUFBTVEsa0JBQWtCLEdBQUc7Z0JBQ3pCLElBQUl4QixXQUFXZ0IsTUFBTUssV0FBVztnQkFFaEMsSUFBSWIsVUFBVSxPQUFPQSxPQUFPaUIsa0JBQWtCLEtBQUssWUFBWTtvQkFDN0QsT0FBT2pCLE9BQU9pQixrQkFBa0IsR0FBR3pCO2dCQUNyQztnQkFFQSxJQUFJLE9BQU9BLFNBQVN5QixrQkFBa0IsS0FBSyxZQUFZO29CQUNyRCxPQUFPekIsU0FBU3lCLGtCQUFrQjtnQkFDcEM7Z0JBRUEsT0FBT3ZGLHNEQUFXQSxDQUFDOEQ7WUFDckI7WUFFQWdCLE1BQU1VLG9CQUFvQixHQUFHO2dCQUMzQixJQUFJLE9BQU9sRCxhQUFhLGVBQWVvQixnQkFBZ0IsQ0FBQ29CLE1BQU1XLElBQUksQ0FBQyxFQUFFO29CQUNuRTtnQkFDRjtnQkFFQSxJQUFJLE9BQU9qQyx3QkFBd0IsYUFBYTtvQkFDOUNBLHNCQUFzQlo7Z0JBQ3hCO2dCQUVBYyxnQkFBZ0IsQ0FBQ29CLE1BQU1XLElBQUksQ0FBQyxHQUFHO2dCQUMvQixJQUFJQyxTQUFTWixNQUFNWixLQUFLLENBQUN5QixVQUFVO2dCQUVuQyxJQUFJLENBQUNELE9BQU9FLE9BQU8sRUFBRTtvQkFDbkJGLFNBQVM7d0JBQUNBO3FCQUFPO2dCQUNuQjtnQkFFQWpDLFdBQVcsQ0FBQ3FCLE1BQU1XLElBQUksQ0FBQyxHQUFHLFNBQVVSLEtBQUs7b0JBQ3ZDLElBQUlILE1BQU1sRCxhQUFhLEtBQUssTUFBTTtvQkFFbEMsSUFBSWtELE1BQU1aLEtBQUssQ0FBQ0MsY0FBYyxFQUFFO3dCQUM5QmMsTUFBTWQsY0FBYztvQkFDdEI7b0JBRUEsSUFBSVcsTUFBTVosS0FBSyxDQUFDMkIsZUFBZSxFQUFFO3dCQUMvQlosTUFBTVksZUFBZTtvQkFDdkI7b0JBRUEsSUFBSWYsTUFBTVosS0FBSyxDQUFDNEIsZ0JBQWdCLElBQUkxRCxpQkFBaUI2QyxRQUFRO29CQUM3RCxJQUFJdEQsVUFBVXNELE1BQU1jLFFBQVEsSUFBSWQsTUFBTWUsWUFBWSxJQUFJZixNQUFNZSxZQUFZLEdBQUdDLEtBQUssTUFBTWhCLE1BQU1qRSxNQUFNO29CQUVsRyxJQUFJaUIsWUFBWU4sU0FBU21ELE1BQU1sRCxhQUFhLEVBQUVrRCxNQUFNWixLQUFLLENBQUNnQyx1QkFBdUIsTUFBTTVELFVBQVU7d0JBQy9GO29CQUNGO29CQUVBd0MsTUFBTUUscUJBQXFCLENBQUNDO2dCQUM5QjtnQkFFQVMsT0FBT0UsT0FBTyxDQUFDLFNBQVU3QixTQUFTO29CQUNoQ3pCLFNBQVNRLGdCQUFnQixDQUFDaUIsV0FBV04sV0FBVyxDQUFDcUIsTUFBTVcsSUFBSSxDQUFDLEVBQUU1Qix1QkFBdUJ0Qyx1QkFBdUJ1RCxRQUFRZjtnQkFDdEg7WUFDRjtZQUVBZSxNQUFNcUIscUJBQXFCLEdBQUc7Z0JBQzVCLE9BQU96QyxnQkFBZ0IsQ0FBQ29CLE1BQU1XLElBQUksQ0FBQztnQkFDbkMsSUFBSVcsS0FBSzNDLFdBQVcsQ0FBQ3FCLE1BQU1XLElBQUksQ0FBQztnQkFFaEMsSUFBSVcsTUFBTSxPQUFPOUQsYUFBYSxhQUFhO29CQUN6QyxJQUFJb0QsU0FBU1osTUFBTVosS0FBSyxDQUFDeUIsVUFBVTtvQkFFbkMsSUFBSSxDQUFDRCxPQUFPRSxPQUFPLEVBQUU7d0JBQ25CRixTQUFTOzRCQUFDQTt5QkFBTztvQkFDbkI7b0JBRUFBLE9BQU9FLE9BQU8sQ0FBQyxTQUFVN0IsU0FBUzt3QkFDaEMsT0FBT3pCLFNBQVNjLG1CQUFtQixDQUFDVyxXQUFXcUMsSUFBSXZDLHVCQUF1QnRDLHVCQUF1QnVELFFBQVFmO29CQUMzRztvQkFDQSxPQUFPTixXQUFXLENBQUNxQixNQUFNVyxJQUFJLENBQUM7Z0JBQ2hDO1lBQ0Y7WUFFQVgsTUFBTXVCLE1BQU0sR0FBRyxTQUFVQyxHQUFHO2dCQUMxQixPQUFPeEIsTUFBTXlCLFdBQVcsR0FBR0Q7WUFDN0I7WUFFQXhCLE1BQU1XLElBQUksR0FBR2xDO1lBQ2IsT0FBT3VCO1FBQ1Q7UUFDQTs7S0FFQyxHQUdELElBQUkwQixTQUFTM0IsZUFBZXpFLFNBQVM7UUFFckNvRyxPQUFPckIsV0FBVyxHQUFHLFNBQVNBO1lBQzVCLElBQUlkLGlCQUFpQmpFLFNBQVMsSUFBSSxDQUFDaUUsaUJBQWlCakUsU0FBUyxDQUFDcUcsZ0JBQWdCLEVBQUU7Z0JBQzlFLE9BQU8sSUFBSTtZQUNiO1lBRUEsSUFBSUgsTUFBTSxJQUFJLENBQUNDLFdBQVc7WUFDMUIsT0FBT0QsSUFBSW5CLFdBQVcsR0FBR21CLElBQUluQixXQUFXLEtBQUttQjtRQUMvQztRQUVBOzs7S0FHQyxHQUNERSxPQUFPRSxpQkFBaUIsR0FBRyxTQUFTQTtZQUNsQyxpREFBaUQ7WUFDakQsaURBQWlEO1lBQ2pELHNEQUFzRDtZQUN0RCxJQUFJLE9BQU9wRSxhQUFhLGVBQWUsQ0FBQ0EsU0FBU3hDLGFBQWEsRUFBRTtnQkFDOUQ7WUFDRjtZQUVBLElBQUlnRSxXQUFXLElBQUksQ0FBQ3FCLFdBQVc7WUFFL0IsSUFBSWIsVUFBVSxPQUFPQSxPQUFPYyxrQkFBa0IsS0FBSyxZQUFZO2dCQUM3RCxJQUFJLENBQUNGLHlCQUF5QixHQUFHWixPQUFPYyxrQkFBa0IsQ0FBQ3RCO2dCQUUzRCxJQUFJLE9BQU8sSUFBSSxDQUFDb0IseUJBQXlCLEtBQUssWUFBWTtvQkFDeEQsTUFBTSxJQUFJRyxNQUFNLHVCQUF1QlosZ0JBQWdCO2dCQUN6RDtZQUNGO1lBRUEsSUFBSSxDQUFDN0MsYUFBYSxHQUFHLElBQUksQ0FBQzBELGtCQUFrQixJQUFJLGtEQUFrRDtZQUVsRyxJQUFJLElBQUksQ0FBQ3BCLEtBQUssQ0FBQ2lDLHFCQUFxQixFQUFFO1lBQ3RDLElBQUksQ0FBQ1gsb0JBQW9CO1FBQzNCO1FBRUFnQixPQUFPRyxrQkFBa0IsR0FBRyxTQUFTQTtZQUNuQyxJQUFJLENBQUMvRSxhQUFhLEdBQUcsSUFBSSxDQUFDMEQsa0JBQWtCO1FBQzlDLEVBQ0E7O0tBRUM7UUFHRGtCLE9BQU9JLG9CQUFvQixHQUFHLFNBQVNBO1lBQ3JDLElBQUksQ0FBQ1QscUJBQXFCO1FBQzVCLEVBQ0E7OztLQUdDO1FBR0Q7O0tBRUMsR0FDREssT0FBT0ssTUFBTSxHQUFHLFNBQVNBO1lBQ3ZCLDBDQUEwQztZQUMxQyxJQUFJQyxjQUFjLElBQUksQ0FBQzVDLEtBQUs7WUFDeEI0QyxZQUFZaEIsZ0JBQWdCO1lBQzVCLElBQUk1QixRQUFRckQsOEJBQThCaUcsYUFBYTtnQkFBQzthQUFtQjtZQUUvRSxJQUFJekMsaUJBQWlCakUsU0FBUyxJQUFJaUUsaUJBQWlCakUsU0FBUyxDQUFDcUcsZ0JBQWdCLEVBQUU7Z0JBQzdFdkMsTUFBTW9DLEdBQUcsR0FBRyxJQUFJLENBQUNELE1BQU07WUFDekIsT0FBTztnQkFDTG5DLE1BQU02QyxVQUFVLEdBQUcsSUFBSSxDQUFDVixNQUFNO1lBQ2hDO1lBRUFuQyxNQUFNaUMscUJBQXFCLEdBQUcsSUFBSSxDQUFDQSxxQkFBcUI7WUFDeERqQyxNQUFNc0Isb0JBQW9CLEdBQUcsSUFBSSxDQUFDQSxvQkFBb0I7WUFDdEQscUJBQU8xRixvREFBYUEsQ0FBQ3VFLGtCQUFrQkg7UUFDekM7UUFFQSxPQUFPVztJQUNULEVBQUU5RSw0Q0FBU0EsR0FBR3dFLE9BQU9HLFdBQVcsR0FBRyxvQkFBb0JELGdCQUFnQixLQUFLRixPQUFPeUMsWUFBWSxHQUFHO1FBQ2hHckIsWUFBWTtZQUFDO1lBQWE7U0FBYTtRQUN2Q0csa0JBQWtCeEIsVUFBVUEsT0FBT3dCLGdCQUFnQixJQUFJO1FBQ3ZESSx5QkFBeUJ0QztRQUN6Qk8sZ0JBQWdCO1FBQ2hCMEIsaUJBQWlCO0lBQ25CLEdBQUd0QixPQUFPMEMsUUFBUSxHQUFHO1FBQ25CLE9BQU81QyxpQkFBaUI0QyxRQUFRLEdBQUc1QyxpQkFBaUI0QyxRQUFRLEtBQUs1QztJQUNuRSxHQUFHRztBQUNMO0FBQUMsaUVBQWVKLGlCQUFpQkEsRUFBQztBQUEwQiIsInNvdXJjZXMiOlsid2VicGFjazovL3RyaXByZXgtbmV4dGpzLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW9uY2xpY2tvdXRzaWRlL2Rpc3QvcmVhY3Qtb25jbGlja291dHNpZGUuZXMuanM/YWMyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2NyZWF0ZUVsZW1lbnQsQ29tcG9uZW50fWZyb20ncmVhY3QnO2ltcG9ydCB7ZmluZERPTU5vZGV9ZnJvbSdyZWFjdC1kb20nO2Z1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpO1xuICBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzcztcblxuICBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpO1xufVxuXG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICBvLl9fcHJvdG9fXyA9IHA7XG4gICAgcmV0dXJuIG87XG4gIH07XG5cbiAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTtcbn1cblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkge1xuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgdmFyIHRhcmdldCA9IHt9O1xuICB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gIHZhciBrZXksIGk7XG5cbiAgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xuICAgIGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7XG4gICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikge1xuICBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO1xuICB9XG5cbiAgcmV0dXJuIHNlbGY7XG59LyoqXG4gKiBDaGVjayB3aGV0aGVyIHNvbWUgRE9NIG5vZGUgaXMgb3VyIENvbXBvbmVudCdzIG5vZGUuXG4gKi9cbmZ1bmN0aW9uIGlzTm9kZUZvdW5kKGN1cnJlbnQsIGNvbXBvbmVudE5vZGUsIGlnbm9yZUNsYXNzKSB7XG4gIGlmIChjdXJyZW50ID09PSBjb21wb25lbnROb2RlKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gLy8gU1ZHIDx1c2UvPiBlbGVtZW50cyBkbyBub3QgdGVjaG5pY2FsbHkgcmVzaWRlIGluIHRoZSByZW5kZXJlZCBET00sIHNvXG4gIC8vIHRoZXkgZG8gbm90IGhhdmUgY2xhc3NMaXN0IGRpcmVjdGx5LCBidXQgdGhleSBvZmZlciBhIGxpbmsgdG8gdGhlaXJcbiAgLy8gY29ycmVzcG9uZGluZyBlbGVtZW50LCB3aGljaCBjYW4gaGF2ZSBjbGFzc0xpc3QuIFRoaXMgZXh0cmEgY2hlY2sgaXMgZm9yXG4gIC8vIHRoYXQgY2FzZS5cbiAgLy8gU2VlOiBodHRwOi8vd3d3LnczLm9yZy9UUi9TVkcxMS9zdHJ1Y3QuaHRtbCNJbnRlcmZhY2VTVkdVc2VFbGVtZW50XG4gIC8vIERpc2N1c3Npb246IGh0dHBzOi8vZ2l0aHViLmNvbS9Qb21heC9yZWFjdC1vbmNsaWNrb3V0c2lkZS9wdWxsLzE3XG5cblxuICBpZiAoY3VycmVudC5jb3JyZXNwb25kaW5nRWxlbWVudCkge1xuICAgIHJldHVybiBjdXJyZW50LmNvcnJlc3BvbmRpbmdFbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhpZ25vcmVDbGFzcyk7XG4gIH1cblxuICByZXR1cm4gY3VycmVudC5jbGFzc0xpc3QuY29udGFpbnMoaWdub3JlQ2xhc3MpO1xufVxuLyoqXG4gKiBUcnkgdG8gZmluZCBvdXIgbm9kZSBpbiBhIGhpZXJhcmNoeSBvZiBub2RlcywgcmV0dXJuaW5nIHRoZSBkb2N1bWVudFxuICogbm9kZSBhcyBoaWdoZXN0IG5vZGUgaWYgb3VyIG5vZGUgaXMgbm90IGZvdW5kIGluIHRoZSBwYXRoIHVwLlxuICovXG5cbmZ1bmN0aW9uIGZpbmRIaWdoZXN0KGN1cnJlbnQsIGNvbXBvbmVudE5vZGUsIGlnbm9yZUNsYXNzKSB7XG4gIGlmIChjdXJyZW50ID09PSBjb21wb25lbnROb2RlKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gLy8gSWYgc291cmNlPWxvY2FsIHRoZW4gdGhpcyBldmVudCBjYW1lIGZyb20gJ3NvbWV3aGVyZSdcbiAgLy8gaW5zaWRlIGFuZCBzaG91bGQgYmUgaWdub3JlZC4gV2UgY291bGQgaGFuZGxlIHRoaXMgd2l0aFxuICAvLyBhIGxheWVyZWQgYXBwcm9hY2gsIHRvbywgYnV0IHRoYXQgcmVxdWlyZXMgZ29pbmcgYmFjayB0b1xuICAvLyB0aGlua2luZyBpbiB0ZXJtcyBvZiBEb20gbm9kZSBuZXN0aW5nLCBydW5uaW5nIGNvdW50ZXJcbiAgLy8gdG8gUmVhY3QncyAneW91IHNob3VsZG4ndCBjYXJlIGFib3V0IHRoZSBET00nIHBoaWxvc29waHkuXG4gIC8vIEFsc28gY292ZXIgc2hhZG93Um9vdCBub2RlIGJ5IGNoZWNraW5nIGN1cnJlbnQuaG9zdFxuXG5cbiAgd2hpbGUgKGN1cnJlbnQucGFyZW50Tm9kZSB8fCBjdXJyZW50Lmhvc3QpIHtcbiAgICAvLyBPbmx5IGNoZWNrIG5vcm1hbCBub2RlIHdpdGhvdXQgc2hhZG93Um9vdFxuICAgIGlmIChjdXJyZW50LnBhcmVudE5vZGUgJiYgaXNOb2RlRm91bmQoY3VycmVudCwgY29tcG9uZW50Tm9kZSwgaWdub3JlQ2xhc3MpKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBjdXJyZW50ID0gY3VycmVudC5wYXJlbnROb2RlIHx8IGN1cnJlbnQuaG9zdDtcbiAgfVxuXG4gIHJldHVybiBjdXJyZW50O1xufVxuLyoqXG4gKiBDaGVjayBpZiB0aGUgYnJvd3NlciBzY3JvbGxiYXIgd2FzIGNsaWNrZWRcbiAqL1xuXG5mdW5jdGlvbiBjbGlja2VkU2Nyb2xsYmFyKGV2dCkge1xuICByZXR1cm4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoIDw9IGV2dC5jbGllbnRYIHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQgPD0gZXZ0LmNsaWVudFk7XG59Ly8gaWRlYWxseSB3aWxsIGdldCByZXBsYWNlZCB3aXRoIGV4dGVybmFsIGRlcFxuLy8gd2hlbiByYWZyZXgvZGV0ZWN0LXBhc3NpdmUtZXZlbnRzIzQgYW5kIHJhZnJleC9kZXRlY3QtcGFzc2l2ZS1ldmVudHMjNSBnZXQgbWVyZ2VkIGluXG52YXIgdGVzdFBhc3NpdmVFdmVudFN1cHBvcnQgPSBmdW5jdGlvbiB0ZXN0UGFzc2l2ZUV2ZW50U3VwcG9ydCgpIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnIHx8IHR5cGVvZiB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBwYXNzaXZlID0gZmFsc2U7XG4gIHZhciBvcHRpb25zID0gT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCAncGFzc2l2ZScsIHtcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHBhc3NpdmUgPSB0cnVlO1xuICAgIH1cbiAgfSk7XG5cbiAgdmFyIG5vb3AgPSBmdW5jdGlvbiBub29wKCkge307XG5cbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Rlc3RQYXNzaXZlRXZlbnRTdXBwb3J0Jywgbm9vcCwgb3B0aW9ucyk7XG4gIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCd0ZXN0UGFzc2l2ZUV2ZW50U3VwcG9ydCcsIG5vb3AsIG9wdGlvbnMpO1xuICByZXR1cm4gcGFzc2l2ZTtcbn07ZnVuY3Rpb24gYXV0b0luYyhzZWVkKSB7XG4gIGlmIChzZWVkID09PSB2b2lkIDApIHtcbiAgICBzZWVkID0gMDtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuICsrc2VlZDtcbiAgfTtcbn1cblxudmFyIHVpZCA9IGF1dG9JbmMoKTt2YXIgcGFzc2l2ZUV2ZW50U3VwcG9ydDtcbnZhciBoYW5kbGVyc01hcCA9IHt9O1xudmFyIGVuYWJsZWRJbnN0YW5jZXMgPSB7fTtcbnZhciB0b3VjaEV2ZW50cyA9IFsndG91Y2hzdGFydCcsICd0b3VjaG1vdmUnXTtcbnZhciBJR05PUkVfQ0xBU1NfTkFNRSA9ICdpZ25vcmUtcmVhY3Qtb25jbGlja291dHNpZGUnO1xuLyoqXG4gKiBPcHRpb25zIGZvciBhZGRFdmVudEhhbmRsZXIgYW5kIHJlbW92ZUV2ZW50SGFuZGxlclxuICovXG5cbmZ1bmN0aW9uIGdldEV2ZW50SGFuZGxlck9wdGlvbnMoaW5zdGFuY2UsIGV2ZW50TmFtZSkge1xuICB2YXIgaGFuZGxlck9wdGlvbnMgPSB7fTtcbiAgdmFyIGlzVG91Y2hFdmVudCA9IHRvdWNoRXZlbnRzLmluZGV4T2YoZXZlbnROYW1lKSAhPT0gLTE7XG5cbiAgaWYgKGlzVG91Y2hFdmVudCAmJiBwYXNzaXZlRXZlbnRTdXBwb3J0KSB7XG4gICAgaGFuZGxlck9wdGlvbnMucGFzc2l2ZSA9ICFpbnN0YW5jZS5wcm9wcy5wcmV2ZW50RGVmYXVsdDtcbiAgfVxuXG4gIHJldHVybiBoYW5kbGVyT3B0aW9ucztcbn1cbi8qKlxuICogVGhpcyBmdW5jdGlvbiBnZW5lcmF0ZXMgdGhlIEhPQyBmdW5jdGlvbiB0aGF0IHlvdSdsbCB1c2VcbiAqIGluIG9yZGVyIHRvIGltcGFydCBvbk91dHNpZGVDbGljayBsaXN0ZW5pbmcgdG8gYW5cbiAqIGFyYml0cmFyeSBjb21wb25lbnQuIEl0IGdldHMgY2FsbGVkIGF0IHRoZSBlbmQgb2YgdGhlXG4gKiBib290c3RyYXBwaW5nIGNvZGUgdG8geWllbGQgYW4gaW5zdGFuY2Ugb2YgdGhlXG4gKiBvbkNsaWNrT3V0c2lkZUhPQyBmdW5jdGlvbiBkZWZpbmVkIGluc2lkZSBzZXR1cEhPQygpLlxuICovXG5cblxuZnVuY3Rpb24gb25DbGlja091dHNpZGVIT0MoV3JhcHBlZENvbXBvbmVudCwgY29uZmlnKSB7XG4gIHZhciBfY2xhc3MsIF90ZW1wO1xuXG4gIHZhciBjb21wb25lbnROYW1lID0gV3JhcHBlZENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBXcmFwcGVkQ29tcG9uZW50Lm5hbWUgfHwgJ0NvbXBvbmVudCc7XG4gIHJldHVybiBfdGVtcCA9IF9jbGFzcyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICAgIF9pbmhlcml0c0xvb3NlKG9uQ2xpY2tPdXRzaWRlLCBfQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIG9uQ2xpY2tPdXRzaWRlKHByb3BzKSB7XG4gICAgICB2YXIgX3RoaXM7XG5cbiAgICAgIF90aGlzID0gX0NvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzKSB8fCB0aGlzO1xuXG4gICAgICBfdGhpcy5fX291dHNpZGVDbGlja0hhbmRsZXIgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBfdGhpcy5fX2NsaWNrT3V0c2lkZUhhbmRsZXJQcm9wID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgX3RoaXMuX19jbGlja091dHNpZGVIYW5kbGVyUHJvcChldmVudCk7XG5cbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgaW5zdGFuY2UgPSBfdGhpcy5nZXRJbnN0YW5jZSgpO1xuXG4gICAgICAgIGlmICh0eXBlb2YgaW5zdGFuY2UucHJvcHMuaGFuZGxlQ2xpY2tPdXRzaWRlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgaW5zdGFuY2UucHJvcHMuaGFuZGxlQ2xpY2tPdXRzaWRlKGV2ZW50KTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodHlwZW9mIGluc3RhbmNlLmhhbmRsZUNsaWNrT3V0c2lkZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIGluc3RhbmNlLmhhbmRsZUNsaWNrT3V0c2lkZShldmVudCk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiV3JhcHBlZENvbXBvbmVudDogXCIgKyBjb21wb25lbnROYW1lICsgXCIgbGFja3MgYSBoYW5kbGVDbGlja091dHNpZGUoZXZlbnQpIGZ1bmN0aW9uIGZvciBwcm9jZXNzaW5nIG91dHNpZGUgY2xpY2sgZXZlbnRzLlwiKTtcbiAgICAgIH07XG5cbiAgICAgIF90aGlzLl9fZ2V0Q29tcG9uZW50Tm9kZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGluc3RhbmNlID0gX3RoaXMuZ2V0SW5zdGFuY2UoKTtcblxuICAgICAgICBpZiAoY29uZmlnICYmIHR5cGVvZiBjb25maWcuc2V0Q2xpY2tPdXRzaWRlUmVmID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgcmV0dXJuIGNvbmZpZy5zZXRDbGlja091dHNpZGVSZWYoKShpbnN0YW5jZSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodHlwZW9mIGluc3RhbmNlLnNldENsaWNrT3V0c2lkZVJlZiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIHJldHVybiBpbnN0YW5jZS5zZXRDbGlja091dHNpZGVSZWYoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBmaW5kRE9NTm9kZShpbnN0YW5jZSk7XG4gICAgICB9O1xuXG4gICAgICBfdGhpcy5lbmFibGVPbkNsaWNrT3V0c2lkZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gJ3VuZGVmaW5lZCcgfHwgZW5hYmxlZEluc3RhbmNlc1tfdGhpcy5fdWlkXSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0eXBlb2YgcGFzc2l2ZUV2ZW50U3VwcG9ydCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICBwYXNzaXZlRXZlbnRTdXBwb3J0ID0gdGVzdFBhc3NpdmVFdmVudFN1cHBvcnQoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGVuYWJsZWRJbnN0YW5jZXNbX3RoaXMuX3VpZF0gPSB0cnVlO1xuICAgICAgICB2YXIgZXZlbnRzID0gX3RoaXMucHJvcHMuZXZlbnRUeXBlcztcblxuICAgICAgICBpZiAoIWV2ZW50cy5mb3JFYWNoKSB7XG4gICAgICAgICAgZXZlbnRzID0gW2V2ZW50c107XG4gICAgICAgIH1cblxuICAgICAgICBoYW5kbGVyc01hcFtfdGhpcy5fdWlkXSA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgIGlmIChfdGhpcy5jb21wb25lbnROb2RlID09PSBudWxsKSByZXR1cm47XG5cbiAgICAgICAgICBpZiAoX3RoaXMucHJvcHMucHJldmVudERlZmF1bHQpIHtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKF90aGlzLnByb3BzLnN0b3BQcm9wYWdhdGlvbikge1xuICAgICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKF90aGlzLnByb3BzLmV4Y2x1ZGVTY3JvbGxiYXIgJiYgY2xpY2tlZFNjcm9sbGJhcihldmVudCkpIHJldHVybjtcbiAgICAgICAgICB2YXIgY3VycmVudCA9IGV2ZW50LmNvbXBvc2VkICYmIGV2ZW50LmNvbXBvc2VkUGF0aCAmJiBldmVudC5jb21wb3NlZFBhdGgoKS5zaGlmdCgpIHx8IGV2ZW50LnRhcmdldDtcblxuICAgICAgICAgIGlmIChmaW5kSGlnaGVzdChjdXJyZW50LCBfdGhpcy5jb21wb25lbnROb2RlLCBfdGhpcy5wcm9wcy5vdXRzaWRlQ2xpY2tJZ25vcmVDbGFzcykgIT09IGRvY3VtZW50KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgX3RoaXMuX19vdXRzaWRlQ2xpY2tIYW5kbGVyKGV2ZW50KTtcbiAgICAgICAgfTtcblxuICAgICAgICBldmVudHMuZm9yRWFjaChmdW5jdGlvbiAoZXZlbnROYW1lKSB7XG4gICAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGhhbmRsZXJzTWFwW190aGlzLl91aWRdLCBnZXRFdmVudEhhbmRsZXJPcHRpb25zKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBldmVudE5hbWUpKTtcbiAgICAgICAgfSk7XG4gICAgICB9O1xuXG4gICAgICBfdGhpcy5kaXNhYmxlT25DbGlja091dHNpZGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGRlbGV0ZSBlbmFibGVkSW5zdGFuY2VzW190aGlzLl91aWRdO1xuICAgICAgICB2YXIgZm4gPSBoYW5kbGVyc01hcFtfdGhpcy5fdWlkXTtcblxuICAgICAgICBpZiAoZm4gJiYgdHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgIHZhciBldmVudHMgPSBfdGhpcy5wcm9wcy5ldmVudFR5cGVzO1xuXG4gICAgICAgICAgaWYgKCFldmVudHMuZm9yRWFjaCkge1xuICAgICAgICAgICAgZXZlbnRzID0gW2V2ZW50c107XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZXZlbnRzLmZvckVhY2goZnVuY3Rpb24gKGV2ZW50TmFtZSkge1xuICAgICAgICAgICAgcmV0dXJuIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCBmbiwgZ2V0RXZlbnRIYW5kbGVyT3B0aW9ucyhfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgZXZlbnROYW1lKSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgZGVsZXRlIGhhbmRsZXJzTWFwW190aGlzLl91aWRdO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICBfdGhpcy5nZXRSZWYgPSBmdW5jdGlvbiAocmVmKSB7XG4gICAgICAgIHJldHVybiBfdGhpcy5pbnN0YW5jZVJlZiA9IHJlZjtcbiAgICAgIH07XG5cbiAgICAgIF90aGlzLl91aWQgPSB1aWQoKTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQWNjZXNzIHRoZSBXcmFwcGVkQ29tcG9uZW50J3MgaW5zdGFuY2UuXG4gICAgICovXG5cblxuICAgIHZhciBfcHJvdG8gPSBvbkNsaWNrT3V0c2lkZS5wcm90b3R5cGU7XG5cbiAgICBfcHJvdG8uZ2V0SW5zdGFuY2UgPSBmdW5jdGlvbiBnZXRJbnN0YW5jZSgpIHtcbiAgICAgIGlmIChXcmFwcGVkQ29tcG9uZW50LnByb3RvdHlwZSAmJiAhV3JhcHBlZENvbXBvbmVudC5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH1cblxuICAgICAgdmFyIHJlZiA9IHRoaXMuaW5zdGFuY2VSZWY7XG4gICAgICByZXR1cm4gcmVmLmdldEluc3RhbmNlID8gcmVmLmdldEluc3RhbmNlKCkgOiByZWY7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEFkZCBjbGljayBsaXN0ZW5lcnMgdG8gdGhlIGN1cnJlbnQgZG9jdW1lbnQsXG4gICAgICogbGlua2VkIHRvIHRoaXMgY29tcG9uZW50J3Mgc3RhdGUuXG4gICAgICovXG4gICAgX3Byb3RvLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICAvLyBJZiB3ZSBhcmUgaW4gYW4gZW52aXJvbm1lbnQgd2l0aG91dCBhIERPTSBzdWNoXG4gICAgICAvLyBhcyBzaGFsbG93IHJlbmRlcmluZyBvciBzbmFwc2hvdHMgdGhlbiB3ZSBleGl0XG4gICAgICAvLyBlYXJseSB0byBwcmV2ZW50IGFueSB1bmhhbmRsZWQgZXJyb3JzIGJlaW5nIHRocm93bi5cbiAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09ICd1bmRlZmluZWQnIHx8ICFkb2N1bWVudC5jcmVhdGVFbGVtZW50KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIGluc3RhbmNlID0gdGhpcy5nZXRJbnN0YW5jZSgpO1xuXG4gICAgICBpZiAoY29uZmlnICYmIHR5cGVvZiBjb25maWcuaGFuZGxlQ2xpY2tPdXRzaWRlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHRoaXMuX19jbGlja091dHNpZGVIYW5kbGVyUHJvcCA9IGNvbmZpZy5oYW5kbGVDbGlja091dHNpZGUoaW5zdGFuY2UpO1xuXG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5fX2NsaWNrT3V0c2lkZUhhbmRsZXJQcm9wICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiV3JhcHBlZENvbXBvbmVudDogXCIgKyBjb21wb25lbnROYW1lICsgXCIgbGFja3MgYSBmdW5jdGlvbiBmb3IgcHJvY2Vzc2luZyBvdXRzaWRlIGNsaWNrIGV2ZW50cyBzcGVjaWZpZWQgYnkgdGhlIGhhbmRsZUNsaWNrT3V0c2lkZSBjb25maWcgb3B0aW9uLlwiKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGlzLmNvbXBvbmVudE5vZGUgPSB0aGlzLl9fZ2V0Q29tcG9uZW50Tm9kZSgpOyAvLyByZXR1cm4gZWFybHkgc28gd2UgZG9udCBpbml0aWF0ZSBvbkNsaWNrT3V0c2lkZVxuXG4gICAgICBpZiAodGhpcy5wcm9wcy5kaXNhYmxlT25DbGlja091dHNpZGUpIHJldHVybjtcbiAgICAgIHRoaXMuZW5hYmxlT25DbGlja091dHNpZGUoKTtcbiAgICB9O1xuXG4gICAgX3Byb3RvLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZSgpIHtcbiAgICAgIHRoaXMuY29tcG9uZW50Tm9kZSA9IHRoaXMuX19nZXRDb21wb25lbnROb2RlKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlbW92ZSBhbGwgZG9jdW1lbnQncyBldmVudCBsaXN0ZW5lcnMgZm9yIHRoaXMgY29tcG9uZW50XG4gICAgICovXG4gICAgO1xuXG4gICAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICB0aGlzLmRpc2FibGVPbkNsaWNrT3V0c2lkZSgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDYW4gYmUgY2FsbGVkIHRvIGV4cGxpY2l0bHkgZW5hYmxlIGV2ZW50IGxpc3RlbmluZ1xuICAgICAqIGZvciBjbGlja3MgYW5kIHRvdWNoZXMgb3V0c2lkZSBvZiB0aGlzIGVsZW1lbnQuXG4gICAgICovXG4gICAgO1xuXG4gICAgLyoqXG4gICAgICogUGFzcy10aHJvdWdoIHJlbmRlclxuICAgICAqL1xuICAgIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHM7XG4gICAgICAgICAgX3RoaXMkcHJvcHMuZXhjbHVkZVNjcm9sbGJhcjtcbiAgICAgICAgICB2YXIgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfdGhpcyRwcm9wcywgW1wiZXhjbHVkZVNjcm9sbGJhclwiXSk7XG5cbiAgICAgIGlmIChXcmFwcGVkQ29tcG9uZW50LnByb3RvdHlwZSAmJiBXcmFwcGVkQ29tcG9uZW50LnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50KSB7XG4gICAgICAgIHByb3BzLnJlZiA9IHRoaXMuZ2V0UmVmO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvcHMud3JhcHBlZFJlZiA9IHRoaXMuZ2V0UmVmO1xuICAgICAgfVxuXG4gICAgICBwcm9wcy5kaXNhYmxlT25DbGlja091dHNpZGUgPSB0aGlzLmRpc2FibGVPbkNsaWNrT3V0c2lkZTtcbiAgICAgIHByb3BzLmVuYWJsZU9uQ2xpY2tPdXRzaWRlID0gdGhpcy5lbmFibGVPbkNsaWNrT3V0c2lkZTtcbiAgICAgIHJldHVybiBjcmVhdGVFbGVtZW50KFdyYXBwZWRDb21wb25lbnQsIHByb3BzKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIG9uQ2xpY2tPdXRzaWRlO1xuICB9KENvbXBvbmVudCksIF9jbGFzcy5kaXNwbGF5TmFtZSA9IFwiT25DbGlja091dHNpZGUoXCIgKyBjb21wb25lbnROYW1lICsgXCIpXCIsIF9jbGFzcy5kZWZhdWx0UHJvcHMgPSB7XG4gICAgZXZlbnRUeXBlczogWydtb3VzZWRvd24nLCAndG91Y2hzdGFydCddLFxuICAgIGV4Y2x1ZGVTY3JvbGxiYXI6IGNvbmZpZyAmJiBjb25maWcuZXhjbHVkZVNjcm9sbGJhciB8fCBmYWxzZSxcbiAgICBvdXRzaWRlQ2xpY2tJZ25vcmVDbGFzczogSUdOT1JFX0NMQVNTX05BTUUsXG4gICAgcHJldmVudERlZmF1bHQ6IGZhbHNlLFxuICAgIHN0b3BQcm9wYWdhdGlvbjogZmFsc2VcbiAgfSwgX2NsYXNzLmdldENsYXNzID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBXcmFwcGVkQ29tcG9uZW50LmdldENsYXNzID8gV3JhcHBlZENvbXBvbmVudC5nZXRDbGFzcygpIDogV3JhcHBlZENvbXBvbmVudDtcbiAgfSwgX3RlbXA7XG59ZXhwb3J0IGRlZmF1bHQgb25DbGlja091dHNpZGVIT0M7ZXhwb3J0e0lHTk9SRV9DTEFTU19OQU1FfTsiXSwibmFtZXMiOlsiY3JlYXRlRWxlbWVudCIsIkNvbXBvbmVudCIsImZpbmRET01Ob2RlIiwiX2luaGVyaXRzTG9vc2UiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsIl9zZXRQcm90b3R5cGVPZiIsIm8iLCJwIiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSIsInNvdXJjZSIsImV4Y2x1ZGVkIiwidGFyZ2V0Iiwic291cmNlS2V5cyIsImtleXMiLCJrZXkiLCJpIiwibGVuZ3RoIiwiaW5kZXhPZiIsIl9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiLCJzZWxmIiwiUmVmZXJlbmNlRXJyb3IiLCJpc05vZGVGb3VuZCIsImN1cnJlbnQiLCJjb21wb25lbnROb2RlIiwiaWdub3JlQ2xhc3MiLCJjb3JyZXNwb25kaW5nRWxlbWVudCIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwiZmluZEhpZ2hlc3QiLCJwYXJlbnROb2RlIiwiaG9zdCIsImNsaWNrZWRTY3JvbGxiYXIiLCJldnQiLCJkb2N1bWVudCIsImRvY3VtZW50RWxlbWVudCIsImNsaWVudFdpZHRoIiwiY2xpZW50WCIsImNsaWVudEhlaWdodCIsImNsaWVudFkiLCJ0ZXN0UGFzc2l2ZUV2ZW50U3VwcG9ydCIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJwYXNzaXZlIiwib3B0aW9ucyIsImRlZmluZVByb3BlcnR5IiwiZ2V0Iiwibm9vcCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJhdXRvSW5jIiwic2VlZCIsInVpZCIsInBhc3NpdmVFdmVudFN1cHBvcnQiLCJoYW5kbGVyc01hcCIsImVuYWJsZWRJbnN0YW5jZXMiLCJ0b3VjaEV2ZW50cyIsIklHTk9SRV9DTEFTU19OQU1FIiwiZ2V0RXZlbnRIYW5kbGVyT3B0aW9ucyIsImluc3RhbmNlIiwiZXZlbnROYW1lIiwiaGFuZGxlck9wdGlvbnMiLCJpc1RvdWNoRXZlbnQiLCJwcm9wcyIsInByZXZlbnREZWZhdWx0Iiwib25DbGlja091dHNpZGVIT0MiLCJXcmFwcGVkQ29tcG9uZW50IiwiY29uZmlnIiwiX2NsYXNzIiwiX3RlbXAiLCJjb21wb25lbnROYW1lIiwiZGlzcGxheU5hbWUiLCJuYW1lIiwiX0NvbXBvbmVudCIsIm9uQ2xpY2tPdXRzaWRlIiwiX3RoaXMiLCJjYWxsIiwiX19vdXRzaWRlQ2xpY2tIYW5kbGVyIiwiZXZlbnQiLCJfX2NsaWNrT3V0c2lkZUhhbmRsZXJQcm9wIiwiZ2V0SW5zdGFuY2UiLCJoYW5kbGVDbGlja091dHNpZGUiLCJFcnJvciIsIl9fZ2V0Q29tcG9uZW50Tm9kZSIsInNldENsaWNrT3V0c2lkZVJlZiIsImVuYWJsZU9uQ2xpY2tPdXRzaWRlIiwiX3VpZCIsImV2ZW50cyIsImV2ZW50VHlwZXMiLCJmb3JFYWNoIiwic3RvcFByb3BhZ2F0aW9uIiwiZXhjbHVkZVNjcm9sbGJhciIsImNvbXBvc2VkIiwiY29tcG9zZWRQYXRoIiwic2hpZnQiLCJvdXRzaWRlQ2xpY2tJZ25vcmVDbGFzcyIsImRpc2FibGVPbkNsaWNrT3V0c2lkZSIsImZuIiwiZ2V0UmVmIiwicmVmIiwiaW5zdGFuY2VSZWYiLCJfcHJvdG8iLCJpc1JlYWN0Q29tcG9uZW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJjb21wb25lbnREaWRVcGRhdGUiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsInJlbmRlciIsIl90aGlzJHByb3BzIiwid3JhcHBlZFJlZiIsImRlZmF1bHRQcm9wcyIsImdldENsYXNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-onclickoutside/dist/react-onclickoutside.es.js\n");

/***/ })

};
;